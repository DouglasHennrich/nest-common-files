user nginx;
worker_processes auto;
pid /run/nginx.pid;

events { worker_connections 1024; }

http {
    # Limite de requests para rotas sensíveis
    limit_req_zone $binary_remote_addr zone=auth_limit:10m rate=10r/m;

    # Logs
    log_format main '$remote_addr - $proxy_add_x_forwarded_for - [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent"';

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # ========= HTTP =========
    server {
        listen 80;
        listen [::]:80;
        server_name yourdomain.com www.yourdomain.com;

        # ACME challenge
        location /.well-known/acme-challenge/ {
            root /var/lib/letsencrypt/;
        }

        # Redireciona todo o resto para HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # ========= HTTPS =========
    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        http2 on;
        server_name yourdomain.com www.yourdomain.com;

        ssl_certificate /etc/letsencrypt/live/yourdomain.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/yourdomain.com/privkey.pem;
        ssl_dhparam /etc/nginx/dhparam/dhparam.pem;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers EECDH+AESGCM:EDH+AESGCM;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
        add_header Content-Security-Policy "default-src 'self'; frame-ancestors 'self'" always;

        # Proxy para NestJS
        location / {
            proxy_pass http://app:3100;
            proxy_http_version 1.1;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # CORS restrito ao domínio da aplicação
            if ($http_origin ~* "^(https?://(www\.)?yourdomain\.com)$") {
                add_header Access-Control-Allow-Origin $http_origin;
                add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS";
                add_header Access-Control-Allow-Headers "Authorization, Content-Type";
            }

            proxy_connect_timeout 10s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Rate limit para auth
        location ~ ^/auth/(sign-in|sign-up)$ {
            limit_req zone=auth_limit burst=20 nodelay;
            proxy_pass http://app:3100;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
